{"version":3,"sources":["store/form.ts","store/toast.ts","components/Modal.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["form","firstName","lastName","error","makeAutoObservable","this","e","target","name","value","preventDefault","toast","addToast","openToast","resetHandler","Modal","observer","className","onClick","removeToast","stopPropagation","App","onChange","changeHandler","id","type","placeholder","undefined","htmlFor","submitHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAqCe,M,WAvBb,aAAe,yBALfA,KAAiB,CACfC,UAAW,GACXC,SAAU,IAGE,KADdC,OAAiB,EAEfC,YAAmBC,M,iDAGrB,SAAcC,GACZD,KAAKL,KAAL,2BAAiBK,KAAKL,MAAtB,kBAA6BM,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,0BAGxD,WACEJ,KAAKL,KAAL,2BAAiBK,KAAKL,MAAtB,IAA4BC,UAAW,GAAIC,SAAU,O,2BAGvD,SAAcI,GACZA,EAAEI,iBACGL,KAAKL,KAAKC,WAAcI,KAAKL,KAAKE,UAGrCG,KAAKF,OAAQ,EACbQ,EAAMC,YAHNP,KAAKF,OAAQ,M,MCXJ,M,WAZb,aAAe,yBAFfU,WAAqB,EAGnBT,YAAmBC,M,4CAGrB,WACEA,KAAKQ,WAAY,I,yBAEnB,WACER,KAAKQ,WAAY,EACjBb,EAAKc,mB,aCLIC,EAAwBC,aAAS,YAAe,IAAZhB,EAAW,EAAXA,KAC/C,OACE,qBACEiB,UAAWN,EAAME,UAAY,aAAe,QAC5CK,QAAS,kBAAMP,EAAMQ,eAFvB,SAIE,sBACEF,UACEN,EAAME,UAAY,wBAA0B,mBAE9CK,QAAS,SAACZ,GAAD,OAAOA,EAAEc,mBAJpB,UAME,wBACEF,QAAS,kBAAMP,EAAMQ,eACrBF,UAAU,mBAFZ,oBAMA,2GACiBjB,EAAKC,UADtB,IACkCD,EAAKE,SADvC,eCkCOmB,EAzDOL,aAAS,WAC7B,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,wCAEF,sBAAMA,UAAU,OAAhB,SACE,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,uBACEA,UAAU,cACVK,SAAU,SAAChB,GAAD,OAAON,EAAKuB,cAAcjB,IACpCkB,GAAG,YACHC,KAAK,OACLjB,KAAK,YACLC,MAAOT,EAAKA,KAAKC,UACjByB,YACE1B,EAAKG,QAAUH,EAAKA,KAAKC,UACrB,wFACA0B,IAGR,uBAAOV,UAAU,cAAcW,QAAQ,YAAvC,mCAIF,sBAAKX,UAAU,wBAAf,UACE,uBACEA,UAAU,cACVK,SAAU,SAAChB,GAAD,OAAON,EAAKuB,cAAcjB,IACpCkB,GAAG,WACHC,KAAK,OACLjB,KAAK,WACLC,MAAOT,EAAKA,KAAKE,SACjBwB,YACE1B,EAAKG,QAAUH,EAAKA,KAAKE,SACrB,wFACAyB,IAGR,uBAAOV,UAAU,cAAcW,QAAQ,WAAvC,2DAIF,wBACEX,UAAU,eACVC,QAAS,SAACZ,GAAD,OAAON,EAAK6B,cAAcvB,IAFrC,uDAQJ,cAACS,EAAD,CAAOf,KAAMA,EAAKA,aC7CT8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7e458e30.chunk.js","sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\nimport toast from \"./toast\";\r\n\r\ninterface TypeForm {\r\n  firstName: string;\r\n  lastName: string;\r\n}\r\n\r\nclass Form {\r\n  form: TypeForm = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n  };\r\n  error: boolean = false;\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  changeHandler(e: React.ChangeEvent<HTMLInputElement>): void {\r\n    this.form = { ...this.form, [e.target.name]: e.target.value };\r\n  }\r\n\r\n  resetHandler(): void {\r\n    this.form = { ...this.form, firstName: \"\", lastName: \"\" };\r\n  }\r\n\r\n  submitHandler(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n    e.preventDefault();\r\n    if (!this.form.firstName || !this.form.lastName) {\r\n      this.error = true;\r\n    } else {\r\n      this.error = false;\r\n      toast.addToast();\r\n    }\r\n  }\r\n}\r\n\r\nexport default new Form();\r\n","import { makeAutoObservable } from \"mobx\";\r\nimport form from \"./form\";\r\n\r\nclass Toast {\r\n  openToast: boolean = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  addToast(): void {\r\n    this.openToast = true;\r\n  }\r\n  removeToast(): void {\r\n    this.openToast = false;\r\n    form.resetHandler()\r\n  }\r\n}\r\nexport default new Toast();\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport toast from \"../store/toast\";\r\ninterface Form {\r\n  form: {\r\n    firstName: string;\r\n    lastName: string;\r\n  };\r\n}\r\n\r\nexport const Modal: React.FC<Form> = observer(({ form }) => {\r\n  return (\r\n    <div\r\n      className={toast.openToast ? \"modal open\" : \"modal\"}\r\n      onClick={() => toast.removeToast()}\r\n    >\r\n      <div\r\n        className={\r\n          toast.openToast ? \"modal__container open\" : \"modal__container\"\r\n        }\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <button\r\n          onClick={() => toast.removeToast()}\r\n          className=\"modal__btn-close\"\r\n        >\r\n          ✗\r\n        </button>\r\n        <p>\r\n          Здравствуйте, {form.firstName} {form.lastName}!\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Modal } from \"./components/Modal\";\nimport form from \"./store/form\";\n\nconst App: React.FC = observer(() => {\n  return (\n    <div className=\"App\">\n      <div className=\"title\">\n        <h1>FORM</h1>\n      </div>\n      <form className=\"form\">\n        <div className=\"form__container\">\n          <div className=\"form__input-container\">\n            <input\n              className=\"form__input\"\n              onChange={(e) => form.changeHandler(e)}\n              id=\"firstName\"\n              type=\"text\"\n              name=\"firstName\"\n              value={form.form.firstName}\n              placeholder={\n                form.error && !form.form.firstName\n                  ? \"Заполните поле!\"\n                  : undefined\n              }\n            />\n            <label className=\"form__label\" htmlFor=\"firstName\">\n              Имя\n            </label>\n          </div>\n          <div className=\"form__input-container\">\n            <input\n              className=\"form__input\"\n              onChange={(e) => form.changeHandler(e)}\n              id=\"lastName\"\n              type=\"text\"\n              name=\"lastName\"\n              value={form.form.lastName}\n              placeholder={\n                form.error && !form.form.lastName\n                  ? \"Заполните поле!\"\n                  : undefined\n              }\n            />\n            <label className=\"form__label\" htmlFor=\"lastName\">\n              Фамилия\n            </label>\n          </div>\n          <button\n            className=\"form__button\"\n            onClick={(e) => form.submitHandler(e)}\n          >\n            Готово\n          </button>\n        </div>\n      </form>\n      <Modal form={form.form} />\n    </div>\n  );\n});\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}